#pragma once
#include <Windows.h>
#include <wrl.h>
#include <d3d12.h>
#include <DirectXMath.h>
#include <d3dx12.h>
#include "Camera.h"
/// <summary>
/// 図形モデル
/// </summary>
class Shape
{
private: // エイリアス
// Microsoft::WRL::を省略
	template <class T> using ComPtr = Microsoft::WRL::ComPtr<T>;
	// DirectX::を省略
	using XMFLOAT2 = DirectX::XMFLOAT2;
	using XMFLOAT3 = DirectX::XMFLOAT3;
	using XMFLOAT4 = DirectX::XMFLOAT4;
	using XMMATRIX = DirectX::XMMATRIX;

public:
	Shape();

	void Init(ID3D12Device* dev);
public://図形モデル

	static bool StaticInitialize(ID3D12Device* device, Camera* camera);

	static void PreDraw(ID3D12GraphicsCommandList* cmdList);

	/// <summary>
	/// 描画後処理
	/// </summary>
	static void PostDraw();

	/// <summary>
	/// 3Dオブジェクト生成
	/// </summary>
	/// <returns></returns>
	static Shape* Create();

	static void CreateTriangularPyramid(const float width, const float height);
	
	static void CreateRect(const float width, const float height);

	static void CreateCircle(const float r, const int num);

	static void CreateSquare(const float width, const float height, const float depth);

	static void CreateCylinder(int division, int prizmHeight, int radius);

	static bool LoadTexture();

	void Update(XMFLOAT3 position, XMFLOAT3 scale, XMFLOAT3 matRot, XMFLOAT4 color);

	void Draw(XMFLOAT3 position, XMFLOAT3 scale, XMFLOAT3 matRot, XMFLOAT4 color);

private:
	static ID3D12Device* dev;					//デバイス

	ComPtr<ID3D12Resource> constBuff; // 定数バッファ
	// 色
	XMFLOAT4 color = { 1,0,0,1 };
	// ローカルスケール
	XMFLOAT3 scale = { 1,1,1 };
	// X,Y,Z軸回りのローカル回転角
	XMFLOAT3 rotation = { 0,0,0 };
	// ローカル座標
	XMFLOAT3 position = { 0,0,0 };
	// ローカルワールド変換行列
	XMMATRIX matWorld;
	// 親オブジェクト
	Shape* parent = nullptr;
};


